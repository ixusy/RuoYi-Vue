<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xby.testAll.mapper.BookMapper">

    <resultMap type="Book" id="BookResult">
        <result property="id"    column="id"    />
        <result property="type"    column="type"    />
        <result property="name"    column="name"    />
        <result property="description"    column="description"    />
        <result property="userId"    column="user_id"    />
    </resultMap>



    <sql id="selectBookVo">
         select b.id, b.type, b.name,b.user_id, b.description
         from book b
         left join sys_user u on u.user_id = b.user_id
         left join sys_dept d on u.dept_id = d.dept_id

    </sql>

    <select id="selectBookList" parameterType="Book" resultMap="BookResult">
        <include refid="selectBookVo"/>
        where 1 = 1

        <where>
            <if test="type != null and type != '' "> and type = #{type}</if>
            <if test="name != null and name != '' "> and name = #{name}</if>
            <if test="description != null  and description != ''"> and description like CONCAT('%', #{description}, '%')</if>
        </where>

        <!-- 数据范围过滤 -->
        ${params.dataScope}

    </select>

    <select id="selectBookById" parameterType="Long" resultMap="BookResult">
        <include refid="selectBookVo"/>
        where id = #{id}
    </select>

    <insert id="insertBook" parameterType="Book" useGeneratedKeys="true" keyProperty="id">
        insert into book
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="type != null and type != ''">type,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="description != null and description != ''">description,</if>
            <if test="userId != null and userId != ''">user_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="type != null and type != ''">#{type},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="description != null and description != ''">#{description},</if>
            <if test="userId != null and userId != ''">#{userId},</if>
         </trim>

    </insert>

    <update id="updateBook" parameterType="Book">
        update book
        <trim prefix="SET" suffixOverrides=",">
            <if test="type != null and type != ''">type = #{type},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="description != null and description != ''">description = #{description},</if>
            <if test="userId != null and userId != ''">user_id = #{userId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBookById" parameterType="Long">
        delete from book where id = #{id}
    </delete>

    <delete id="deleteBookByIds" parameterType="String">
        delete from book where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>
